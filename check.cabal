name:                check
version:             1.0.0.0
synopsis:            Generalised data validation
description:	       `Check` abstracts common patterns in data validation. See `Data.Check`
                     for a usage example.
homepage:            https://github.com/qfpl/check
license:             BSD3
license-file:        LICENCE
author:              Queensland Functional Programming Lab <oᴉ˙ldɟb@llǝʞsɐɥ>
maintainer:          Queensland Functional Programming Lab <oᴉ˙ldɟb@llǝʞsɐɥ>
category:            Data
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10
tested-with:         GHC == 8.0.2
	           , GHC == 7.10.3
	           , GHC == 7.10.2

library
  hs-source-dirs:      src
  exposed-modules:     Data.Check
                     , Data.Check.Field
  build-depends:       base >=4.7 && <5
                     , aeson >=1.1.2.0 && <1.2
                     , containers >=0.5.6.2 && <0.6
                     , profunctors >=5.2.1 && <5.3
                     , text >=1.2.2.2 && <1.3
                     , these >=0.7.3 && <0.8
                     , mtl >=2.2.1 && <2.3
                     , semigroupoids >=5.2.1 && <5.3
                     , semigroups >=0.16 && <0.19
  default-language:    Haskell2010

test-suite check-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       base >=4.7 && <5
                     , check
                     , containers >=0.5.6.2 && <0.6
                     , hedgehog >=0.5 && <0.6
                     , mtl >=2.2.1 && <2.3
                     , profunctors >=5.2.1 && <5.3
                     , these >=0.7.3 && <0.8
                     , transformers >=0.5 && <0.6
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/qfpl/check
